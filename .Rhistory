save.image("C:\\Users\\Benjamin\\Desktop\\R_data\\test.RData")
load("C:\\Users\\Benjamin\\Desktop\\R_data\\test.RData")
q()
read.csv("BurnDat_BN.csv")
read.csv("BurnDat_BN.csv")
dat=read.csv("BurnDat_BN.csv")
str(dat)
length(dat)
length(dat$X2007)
ydat=matrix(data=NA, nrow=79, ncol=18)
head(ydat)
xone=as.vector(dat[1,], na.rm=T)
xone=as.vector(dat$X2007, na.rm=TRUE)
xone=as.vector(dat$X2007)
head(xone)
xone=xone[!is.na(xone)]
head(xone)
for(i in 1:nrow(dat)){
dat[[i],1]<-as.vector(dat$Point[i]}
dat[1,1]
dat[2,1]
for(i in 1:nrow(dat)){
v<-as.vector(dat[[i],1]}
v=as.vector(dat[1,])
v
for(i in 1:nrow(dat)){
V[i]<-as.vector(dat[i,]}
for(i in 1:nrow(dat)){
V[i]<-as.vector(dat[i,])}
row.names(dat)
names(dat$Point)
row.names(dat$Point)
dat2<-dat[,2]
dat2
dat1<-dat[,1]
dat1
dat1=as.vector(dat1)
dat1
dat1[1]<as.vector(dat[1,])
dat1[1]<as.vector(dat[2,])
head(dat)
dat=as.matrix(dat)
head(dat)
length(dat)
num.col(dat)
ncol(dat)
dat1=dat[2:18,]
ncol(dat1)
dat1=dat[,2:18]
ncol(dat1)
dat1=dat1[2:length(dat1),]
nrows(dat1)
nrow(dat1)
dat1=dat1[2:nrow(dat1),]
str(dat1)
head(dat1)
dat[2,]
dat[1]
dat[1,]
dat=as.matrix(dat)
dat[1,]
dat.rm=na.rm(dat)
datx=which(dat!=na.rm)
datx=which(dat!="NA")
summary(datx)
head(datx)
dat
?as.vector
row.names(dat)
rnames(dat)
names(dat)
d1=as.vector(dat[1,])
d1
dat1
datr=rownames(dat)
datr
dat=as.dataframe(dat)
dat=dataframe(dat)
dat=data.frame(dat)
datr=rownames(dat)
datr
datr=(dat$Point)
datr
datr=as.vector(datr)
 list2env(setNames(split(as.matrix(df),
sasad
d
 list2env(setNames(split(as.matrix(df),
        row(dat)), paste0("Row",1:79)), envir=.GlobalEnv)
 list2env(setNames(split(as.matrix(dat),
row(dat)), paste0("Row",1:79)), envir=.GlobalEnv)
Row1
Row2
dat$Point[1:2]
 list2env(setNames(split(as.matrix(dat),
row(dat)), paste0(dat$Point[1:79])), envir=.GlobalEnv)
J1
str(J1)
burn=read.csv("BurnVectors.csv")
burn
burn=as.matrix(burn)
burn
burn=as.matrix(read.csv("BurnVectors.csv"))
burn
burn=as.matrix(read.csv("BurnVectors.csv"),colnames=NULL)
burn
burn=data.frame(read.csv("BurnVectors.csv"))
head(burn)
burn=data.frame(read.csv("BurnVectors.csv"))
head(burn)
burn[2,h]
burn$h[2]
dat=read.csv("Rdat.csv")
dat=read.csv("Rdat_BN.csv")
colnames(dat)
j=which(dat$PointName="J1")
j=which(dat$PointName[J1])
j=which(dat$PointName=="J1")
head(j)
str(j)
j<-dat[which(PointName=='J1'),]
j<-dat[which(dat$PointName=='J1'),]
j
burn=read.csv("BurnVectors.csv")
head(j)
day=j$DaysAfterN
head(day)
str(day)
day=as.vector(day)
str(day)
mode(day)
head(burn)
> day=j$DaysAfterN
head(burn)
j.burn<-burn[which(burn$a=='J1'),]
j.burn
x=as.vector(j.burn)
x
j.day=day
x=j.day-j.burn
j.day
na=which(burn='NA')
na=which(burn=='NA')
head(na)
mode(na)
x=j.burn[!is.na(j.burn)]
x
j.burn=j.burn[!is.na(j.burn)]
j.burn
j.burn=j.burn[!1]
j.burn
dat=read.csv("Rdat_BN.csv", header=f)
dat=read.csv("Rdat_BN.csv", header=FALSE)
head(dat)
burn=read.csv("BurnVectors.csv", header=F)
head(burn)
burn
burn=read.csv("BurnVectors.csv", header=F)
burn
j.burn<-burn[which(burn$V1=='J1'),]#burn data (burn) by J1
j.burn
burn=read.csv("burn.vectors.csv", header=F)
j.burn<-burn[which(burn$V1=='J1'),]#burn data (burn) by J1
j.burn
burn
burn=read.csv("burn.vectors.csv")
burn
j.burn=burn[,burn$J1]
j.burn=burn[,1]
j.burn
j.day
j.burn<-j.burn[!is.na(j.burn)]
j.burn
str(j.burn)
x=c(1:5)
x
str(x)
j.day
j.burn
?max
j.bet<-NULL
j.bet
while(j.bet>0){j.bet<-j.day-j.burn}
j.day-j.burn
lapply(j.day, print(min(while(j.bet>0){j.bet<-j.day-j.burn})))
j.bet<-NULL
j.day
j.burn
for(i in 1:length(j.day)){for(k in 1:length(j.burn)){if(j.burn[k]<=j.day[i]){j.dsb[i]<-j.day[i]-j.burn[k]}}}
j.dsb<-0
for(i in 1:length(j.day)){for(k in 1:length(j.burn)){if(j.burn[k]<=j.day[i]){j.dsb[i]<-j.day[i]-j.burn[k]}}}
j.dsb
save.image("C:\\Users\\Benjamin\\Desktop\\R_data\\9-26.RData")
v<-vv<-vvvv
q()
q()
q()
q()
q()
q()
q()
q()
?colnames
v<-rownames(dat)
v
head(dat)
names(dat$PointName)
values(dat$PointName)
str(dat$PointName)
n<-dat$PointName
str(n)
summary(n)
n
n<-dat$PointName[1:nrow(dat)]
head(n)
dat$PointName[5]
dat=read.csv("Rdat_BN.csv")
head(dat)
?split
summary(dat$PointName)
?names
names(dat$PointName)
?values
levels(dat$PointName)
p.name<-levels(dat$PointName)
j<-dat[which(dat$PointName=='J1'),]
p.name[79]
t<-c(na,js,ff)
t<-c("na","js","ff")
t
t<-c("na","js",'ff')
t
dat.s<-split(dat, dat$PointName)
head(dat.s)
dat.ss<-dat[,6&4]
head(dat.ss)
dat.ss<-dat[,6]
head(dat.ss)
vars=c("PointName","DaysAfterN")
dat.ss<-dat[vars]
head(dat.ss)
dat.s<-split(dat.ss$PointName)
dat.s<-split(dat.ss, dat.ss$PointName)
head(dat.s)
e<-c("DaysAfterN")
dat.x<-dat.s[e]
head(dat.x)
burn.s<-burn[vars]
head(burn)
burn.t<-T(burn)
burn.t<-t(burn)
head(burn.t)
j.dsb<-NA#create an empty object
for(i in 1:length(j.day)){#for each value in j.day
for(k in 1:length(j.burn)){#and for each value in j.burn
if(j.burn[k]<=j.day[i]){#if a value in j.burn is less than any j.day value
j.dsb[i]<-j.day[i]-j.burn[k]}}
}
for(i in 1:length(j.day)){for(k in 1:length(j.burn)){if(j.burn[k]<=j.day[i]){j.dsb[i]<-j.day[i]-j.burn[k]}}
}
head(dat.s$J1)
head(dat.s$J1[,1])
head(dat.s$J1[,2])
?from
for(i in dat.s$J1:dat.s$R9){print("hi")}
for(i in 1:length(p.name)){x<-print("hi")}
head(x)
for(i in 1:length(p.name)){x<-"hi"}
head(x)
vars<-c(1:length(p.name))
head(vars)
head(dat.ss)
utils:::menuInstallPkgs()
library(plyr)
dat.ss$pcode<-revalue(dat.ss$PointName, from=list(p.name), to=c(1:length(p.name)))
dat.ss$pcode<-mapvalues(dat.ss$PointName, from=list(p.name), to=c(1:length(p.name)))
head(list(p.name))
?list
dat.ss$pcode<-mapvalues(dat.ss$PointName, from=p.name, to=c(1:length(p.name)))
head(dat.ss)
vars=c("pcode", "DaysAfterN")
dat.ss<-dat.ss[vars]
head(dat.ss)
head(burn)
colnames(burn)<-c(1:length(colnames(burn)))
head(burn)
burn[,73]
head(dat.ss)
dat.s<-split(dat.ss$pcode)
dat.s<-split(dat.ss, dat.ss$pcode)
dat.s$73
head(dat.s)
dat.s$'73'
dat.s$'73'[,2]
p.names[73]
p.name[73]
nrow(burn)
ncol(burn)
for(p in 1:ncol(burn)){for(i in 1:length(dat.s$'p'[,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s$'p'[i,2]){dsb[i]<-dat.s$'p'[i,2]-burn[k,p]}}}
}
burn[5,73]
dat.s$73[5, 2]
dat.s$'73'[5, 2]
str(dat.s)
dat.s$73[5, 2]
dat.s$'73'[5, 2]
for(p in 1:ncol(burn)){for(i in 1:length(dat.s$'p'[,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s$'p'[i,2]){dsb[i]<-dat.s$'p'[i,2]-burn[k,p]}}}
+ }
for(p in 1:ncol(burn)){for(i in 1:length(dat.s$'p'[,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s$'p'[i,2]){dsb[i]<-dat.s$'p'[i,2]-burn[k,p]}}}
}
if(burn[1,73]<=dat.s$'73'[1,2]){print("T")}
if(burn[1,73]<=dat.s$73[1,2]){print("T")}
for(p in 73:75){for(i in 1:3){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s$'p'[i,2]){print("T")}}}
}
for(p in 73:75){for(i in 1:3){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s$p[i,2]){print("T")}}}}
for(p in 73:75){for(i in 1:3){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s$73[i,2]){print("T")}}}}
for(p in 73:75){for(i in 1:3){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s$'73'[i,2]){print("T")}}}}
for(p in 1:5){if(dat.s$"p"[1,2]<=1000){print("T")}}
if(dat.s$"1"[1,2]<=1000){print("T")}
if(dat.s$"1"[1,2]>=1000){print("T")}
for(p in 1:5){if(dat.s$[p][1,2]<=1000){print("T")}}
for(p in 1:5){if(dat.s$p[1,2]<=1000){print("T")}}
for(p in a:e){if(dat.s$p[1,2]<=1000){print("T")}}
a:e
list(a:e)
1:5
?grep
a-c
z=grep("B", colnames(burn))
head(z)
z=grep("5", colnames(burn))
z
for(p in 1:5){if(dat.s$[[p]][1,2]<=1000){print("T")}}
for(p in 1:5){if(dat.s[[p]][1,2]<=1000){print("T")}}
for(p in 1:5){if(dat.s[[p]][1,2]>=1000){print("T")}}
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){dsb[i]<-dat.s[[p]][i,2]-burn[k,p]}}}}
dsb<-NA
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){dsb[i]<-dat.s[[p]][i,2]-burn[k,p]}}}}
str(burn)
length(burn$79)
length(burn$'79')
length(burn$'69')
str(dat.s)
#(burn[k, p] <= dat.s[[p]][i, 2])
burn[5,73]
length(burn[,73])
head(burn)
max(dat.s[,2])
head(dat)
max(dat$DaysAfterN)
dat.x<-0
head(burn)
for(i in 1:79){for(k in 1:10){if(burn[i,k]=="NA"){burn[i,k]<-9999}}}
for(i in 1:79){for(k in 1:10){if(burn[k,i]=="NA"){burn[k,i]<-9999}}}
nrow(burn)
ncol(burn)
for(i in 1:79){for(k in 1:10){if(burn[k,i]==NA){burn[k,i]<-9999}}}
burn[,'70']
burn[,70]
burn[is.na(burn)] <- 9999
burn[,70]
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){dsb[i]<-dat.s[[p]][i,2]-burn[k,p]}}}}
str(dsb)
head(dsb)
dsb
dim(dsb)
dim(burn)
dim(dat.s)
x<-data.frame(data="NA", ncol=50, nrow=79)
head(x)
x<-matrix(data="NA", ncol=50, nrow=79)
head(x)
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){x[p,i]<-dat.s[[p]][i,2]-burn[k,p]}}}}
head(x)
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){x[p,i]<-dat.s[[p]][i,2]-burn[k,p]}}}}
x['1]
dfsfad
fd
]
[p-[
]]]]]]]
]]
]
]
]]]}}}}
}}
burn[,70]
x<-matrix(data="NA", ncol=50, nrow=79)
~
>>>>>>>>>>>>>>>>>>>>>>>>>..
x[,1]
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){dsb[p,i]<-dat.s[[p]][i,2]-burn[k,p]}}}}
dsb<-matrix(data="NA", ncol=79, nrow=50)
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){dsb[i,p]<-dat.s[[p]][i,2]-burn[k,p]}}}}
dsb[,1]
dsb[,79]
for(p in 1:ncol(burn)){for(i in 1:length(dat.s[[p]][,2])){for(k in 1:length(burn[,p])){if(burn[k,p]<=dat.s[[p]][i,2]){dsb[i,p]<-dat.s[[p]][i,2]-burn[k,p]}}}}
day.v<-dat.s$'73'[,2]
burn.v<-burn[,73]
p.name[73]
for(i in 1:length(day.v)){for(k in 1:length(burn.v)){if(burn.v[k]<=day.v[i]){dsb.v[i]<-day.v[i]-burn.v[k]}}}
dsb.v<-NA
for(i in 1:length(day.v)){for(k in 1:length(burn.v)){if(burn.v[k]<=day.v[i]){dsb.v[i]<-day.v[i]-burn.v[k]}}}
dsb.v
dsb[,73]
write.csv(dsb, file = "dsb.csv")
save.image("C:\\Users\\Benjamin\\Desktop\\R_data\\9-27.RData")
head(burn)
head(dat.ss)
burn[,21]
dat.s$'21'[,2]
dat.s$'21'
which(dat$PointName=="J14")
q()
